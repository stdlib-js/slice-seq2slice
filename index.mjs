// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-seq2slice@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.1.0-esm/index.mjs";function n(n,o,a){var m,d;if(!s(n))throw new TypeError(t("invalid argument. First argument must be a valid subsequence string. Value: `%s`.",n));if(!e(o))throw new TypeError(t("null3X,F1",o));if(!r(a))throw new TypeError(t("nullAL,M9",a));if(void 0===(m=(d=i(n,o,a)).code))return d;if("ERR_SLICE_INVALID_INCREMENT"===m)throw new RangeError(t("invalid argument. A subsequence string must have a non-zero increment. Value: `%s`.",n));if("ERR_SLICE_OUT_OF_BOUNDS"===m)throw new RangeError(t("invalid argument. The subsequence string resolves to a slice which exceeds index bounds. Value: `%s`.",n));throw new TypeError(t("invalid argument. First argument must be a valid subsequence string. Value: `%s`.",n))}export{n as default};
//# sourceMappingURL=index.mjs.map
